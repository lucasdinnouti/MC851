// ============================================================
// void main() {
//     unsigned char* unsigned_byte = 256;
//     unsigned short* unsigned_half = 256;
//     int* word = 256;
//     short* half = 256;
//     signed char* byte = 256;
// 
//     *word = 0xfafbfcfd;
// 
//     int* output = 515;
//     if (*unsigned_byte == 0xfd && *unsigned_half == 0xfcfd && *word == 0xfafbfcfd && *half == 0xfffffcfd && *byte == 0xfffffffd) {
//         *output = 1;
//     } else {
//         output = 0;
//     }
// }
// ============================================================
// 00000000 <_start>:
//    0:	0001                	nop
//    2:	0001                	nop
//    4:	1fc00113          	li	sp,508
//    8:	008000ef          	jal	10 <main>
// 
// 0000000c <loop>:
//    c:	0001                	nop
//    e:	bffd                	j	c <loop>
// 
// 00000010 <main>:
//   10:	7179                	add	sp,sp,-48
//   12:	d622                	sw	s0,44(sp)
//   14:	1800                	add	s0,sp,48
//   16:	10000793          	li	a5,256
//   1a:	fef42623          	sw	a5,-20(s0)
//   1e:	10000793          	li	a5,256
//   22:	fef42423          	sw	a5,-24(s0)
//   26:	10000793          	li	a5,256
//   2a:	fef42223          	sw	a5,-28(s0)
//   2e:	10000793          	li	a5,256
//   32:	fef42023          	sw	a5,-32(s0)
//   36:	10000793          	li	a5,256
//   3a:	fcf42e23          	sw	a5,-36(s0)
//   3e:	fe442783          	lw	a5,-28(s0)
//   42:	fafc0737          	lui	a4,0xfafc0
//   46:	cfd70713          	add	a4,a4,-771 # fafbfcfd <main+0xfafbfced>
//   4a:	c398                	sw	a4,0(a5)
//   4c:	20300793          	li	a5,515
//   50:	fcf42c23          	sw	a5,-40(s0)
//   54:	fec42783          	lw	a5,-20(s0)
//   58:	0007c703          	lbu	a4,0(a5)
//   5c:	0fd00793          	li	a5,253
//   60:	04f71863          	bne	a4,a5,b0 <main+0xa0>
//   64:	fe842783          	lw	a5,-24(s0)
//   68:	0007d703          	lhu	a4,0(a5)
//   6c:	67c1                	lui	a5,0x10
//   6e:	cfd78793          	add	a5,a5,-771 # fcfd <main+0xfced>
//   72:	02f71f63          	bne	a4,a5,b0 <main+0xa0>
//   76:	fe442783          	lw	a5,-28(s0)
//   7a:	4398                	lw	a4,0(a5)
//   7c:	fafc07b7          	lui	a5,0xfafc0
//   80:	cfd78793          	add	a5,a5,-771 # fafbfcfd <main+0xfafbfced>
//   84:	02f71663          	bne	a4,a5,b0 <main+0xa0>
//   88:	fe042783          	lw	a5,-32(s0)
//   8c:	00079703          	lh	a4,0(a5)
//   90:	cfd00793          	li	a5,-771
//   94:	00f71e63          	bne	a4,a5,b0 <main+0xa0>
//   98:	fdc42783          	lw	a5,-36(s0)
//   9c:	00078703          	lb	a4,0(a5)
//   a0:	57f5                	li	a5,-3
//   a2:	00f71763          	bne	a4,a5,b0 <main+0xa0>
//   a6:	fd842783          	lw	a5,-40(s0)
//   aa:	4705                	li	a4,1
//   ac:	c398                	sw	a4,0(a5)
//   ae:	a021                	j	b6 <main+0xa6>
//   b0:	fc042c23          	sw	zero,-40(s0)
//   b4:	0001                	nop
//   b6:	0001                	nop
//   b8:	5432                	lw	s0,44(sp)
//   ba:	6145                	add	sp,sp,48
//   bc:	8082                	ret
// ============================================================
00010001
1fc00113
008000ef
bffd0001
d6227179
07931800
26231000
0793fef4
24231000
0793fef4
22231000
0793fef4
20231000
0793fef4
2e231000
2783fcf4
0737fe44
0713fafc
c398cfd7
20300793
fcf42c23
fec42783
0007c703
0fd00793
04f71863
fe842783
0007d703
879367c1
1f63cfd7
278302f7
4398fe44
fafc07b7
cfd78793
02f71663
fe042783
00079703
cfd00793
00f71e63
fdc42783
00078703
176357f5
278300f7
4705fd84
a021c398
fc042c23
00010001
61455432
8082
